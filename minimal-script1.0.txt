CREATE TABLE programme (
  date DATE PRIMARY KEY NOT NULL,
  date_insert_db DATE NOT NULL DEFAULT CURRENT_DATE
);

CREATE TABLE hippodrome(
  code VARCHAR(20) PRIMARY KEY,
  libelle_court VARCHAR(100),
  libelle_long VARCHAR(500)
);

CREATE TABLE nebulosite(
  code VARCHAR(5) PRIMARY KEY,
  libelle_court VARCHAR(50),
  libelle_long VARCHAR(1000)
);

CREATE TABLE meteo(
  id SERIAL,
  date_prevision DATE, 
  temperature INTEGER,
  force_vent INTEGER,
  direction_vent VARCHAR(5),
  nebulosite_code VARCHAR(5),

  FOREIGN KEY(nebulosite_code) references nebulosite(code) ON UPDATE CASCADE,

  date_reunion DATE,
  num_reunion INTEGER,
  PRIMARY KEY(date_reunion, num_reunion)
);

CREATE TABLE pays(
  code VARCHAR(20) PRIMARY KEY,
  libelle VARCHAR(200)
);

CREATE TABLE reunion (
  id SERIAL,
  date_reunion DATE NOT NULL,
  date_insert_db DATE NOT NULL DEFAULT CURRENT_DATE,
  audience VARCHAR (20),
  nature VARCHAR(20),
  num_externe INTEGER,
  num_officiel INTEGER,
  offres_internet BOOLEAN,
  report_plus_fpa_max INTEGER,
  statut VARCHAR(20),

  programme_date DATE,
  FOREIGN KEY(programme_date) references programme(date) ON UPDATE CASCADE,

  hippodrome_code VARCHAR(20),
  FOREIGN KEY(hippodrome_code) references hippodrome(code) ON UPDATE CASCADE,

  pays_code VARCHAR(20),
  FOREIGN KEY(pays_code) references pays(code),

  PRIMARY KEY(date_reunion, num_officiel)
);

CREATE TABLE course(
  id SERIAL,

  heure_depart DATE,
  libelle VARCHAR(1000),
 
  date_insert_db DATE,

  num_reunion INTEGER,
  date_reunion DATE,
  FOREIGN KEY(date_reunion, num_reunion) REFERENCES reunion(date_reunion, num_officiel) ON UPDATE CASCADE,

  PRIMARY KEY(heure_depart, libelle)
);
